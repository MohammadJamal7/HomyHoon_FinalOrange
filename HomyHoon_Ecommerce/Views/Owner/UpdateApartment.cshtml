@{
    Layout = null;
}

@model HomyHoon_Ecommerce.ViewModels.UpdateApartmentVM 
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Update Apartment</title>
    <!-- Bootstrap and Boxicons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet">

    <style>
        body {
            margin-top: 100px;
            font-family: 'Nunito', sans-serif;
            background-color: #f8f9fa;
        }

        .purple {
            background-color: #6f42c1;
            color: white;
        }

        .purple:hover {
                background-color: #5a379d;
                color:white;
        }

        .container-fluid {
            background: #fff;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
    </style>
</head>
<body>
    <div class="container-fluid shadow mt-5 rounded p-4" style="max-width: 90%;">
        <div class="row">
            <div class="col text-center mb-4">
                <h2>Update Apartment</h2>
            </div>
        </div>

        <form asp-action="UpdateApartment" asp-controller="Owner" method="post" enctype="multipart/form-data">
            <input type="hidden" asp-for="Id" />

            <!-- General Information (Previous Fields) -->
            <div class="row">
                <div class="col">
                    <h5 class="fw-bold">General Information</h5>
                </div>
            </div>
            <div class="row mt-4">
                <div class="col-md-4">
                    <label asp-for="Name" class="fw-semibold"><small>Title</small></label>
                    <input asp-for="Name" class="form-control bg-light" placeholder="Enter apartment title" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="col-md-4">
                    <label asp-for="CategoryId" class="fw-semibold"><small>Category</small></label>
                    <select asp-for="CategoryId" class="form-select bg-light">
                        <option value="">Select a category</option>
                        @foreach (var category in Model.Categories)
                        {
                            <option value="@category.Id" selected="@(category.Id == Model.CategoryId)">
                                @category.Name
                            </option>
                        }
                    </select>
                    <span asp-validation-for="CategoryId" class="text-danger"></span>
                </div>
                <div class="col-md-4">
                    <label asp-for="PricePerNight" class="fw-semibold"><small>Price per Night ($)</small></label>
                    <input asp-for="PricePerNight" class="form-control bg-light" placeholder="Enter price per night" />
                    <span asp-validation-for="PricePerNight" class="text-danger"></span>
                </div>
            </div>

            <!-- Apartment Features (Previous Fields) -->
            <div class="row pt-4">
                <div class="col-md-3">
                    <label asp-for="Rooms" class="fw-semibold"><small>Rooms</small></label>
                    <input asp-for="Rooms" type="number" class="form-control bg-light" min="1" />
                    <span asp-validation-for="Rooms" class="text-danger"></span>
                </div>
                <div class="col-md-3">
                    <label asp-for="Beds" class="fw-semibold"><small>Beds</small></label>
                    <input asp-for="Beds" type="number" class="form-control bg-light" min="1" />
                    <span asp-validation-for="Beds" class="text-danger"></span>
                </div>
                <div class="col-md-3">
                    <label asp-for="Baths" class="fw-semibold"><small>Baths</small></label>
                    <input asp-for="Baths" type="number" class="form-control bg-light" min="1" />
                    <span asp-validation-for="Baths" class="text-danger"></span>
                </div>
                <div class="col-md-3">
                    <label asp-for="MaxGuests" class="fw-semibold"><small>Allowed Guests</small></label>
                    <input asp-for="MaxGuests" type="number" class="form-control bg-light" min="1" />
                    <span asp-validation-for="MaxGuests" class="text-danger"></span>
                </div>
            </div>

            <!-- Description and Amenities -->
            <div class="row pt-4">
                <div class="col-md-6">
                    <label asp-for="Description" class="fw-semibold"><small>Description</small></label>
                    <textarea asp-for="Description" rows="5" class="form-control bg-light"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                <div class="col-md-6">
                    <label class="fw-semibold"><small>Amenities</small></label>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-check mb-2">
                                <input asp-for="IsFrunshised" class="form-check-input" type="checkbox" />
                                <label asp-for="IsFrunshised" class="form-check-label">Furnished</label>
                            </div>
                            <div class="form-check mb-2">
                                <input asp-for="Kitchen" class="form-check-input" type="checkbox" />
                                <label asp-for="Kitchen" class="form-check-label">Kitchen</label>
                            </div>
                            <div class="form-check mb-2">
                                <input asp-for="FirstAid" class="form-check-input" type="checkbox" />
                                <label asp-for="FirstAid" class="form-check-label">First Aid Kit</label>
                            </div>
                            <div class="form-check mb-2">
                                <input asp-for="TV" class="form-check-input" type="checkbox" />
                                <label asp-for="TV" class="form-check-label">TV</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-check mb-2">
                                <input asp-for="Wifi" class="form-check-input" type="checkbox" />
                                <label asp-for="Wifi" class="form-check-label">Wi-Fi</label>
                            </div>
                            <div class="form-check mb-2">
                                <input asp-for="Parking" class="form-check-input" type="checkbox" />
                                <label asp-for="Parking" class="form-check-label">Parking</label>
                            </div>
                            <div class="form-check mb-2">
                                <input asp-for="AirConditioning" class="form-check-input" type="checkbox" />
                                <label asp-for="AirConditioning" class="form-check-label">Air Conditioning</label>
                            </div>
                            <div class="form-check mb-2">
                                <input asp-for="Heating" class="form-check-input" type="checkbox" />
                                <label asp-for="Heating" class="form-check-label">Heating</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Address and Location -->
            <div class="row mt-3">
                <div class="col-md-6">
                    <label asp-for="Address" class="fw-semibold"><small>Address</small></label>
                    <input asp-for="Address" class="form-control bg-light" placeholder="Enter full address" />
                    <span asp-validation-for="Address" class="text-danger"></span>
                </div>
                <div class="col-md-6">
                    <label asp-for="City" class="fw-semibold"><small>City</small></label>
                    <select asp-for="City" class="form-select bg-light" required>
                        <option value="">Select a city</option>
                        <option value="Amman">Amman</option>
                        <option value="Zarqa">Zarqa</option>
                        <option value="Irbid">Irbid</option>
                        <option value="Aqaba">Aqaba</option>
                        <option value="Mafraq">Mafraq</option>
                        <option value="Ajloun">Ajloun</option>
                        <option value="Jarash">Jerash</option>
                        <option value="Madaba">Madaba</option>
                        <option value="Balqa">Balqa</option>
                        <option value="Tafilah">Tafilah</option>
                        <option value="Ma'an">Ma'an</option>
                        <option value="Karak">Karak</option>
                    </select>
                    <span asp-validation-for="City" class="text-danger"></span>
                </div>
            </div>
            <input type="hidden" id="deletedImages" name="DeletedImages" value="" />

            <!-- Image Section (Previous Fields) -->
            <div class="row pt-4">
                <div class="col-lg-7 col-sm-12">
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Upload Images</label>
                        <p id="albumCount" class="text-muted">Album 0 / 5 images</p>
                        <div id="imageGrid" class="image-grid d-flex flex-wrap gap-3">
                            <div id="addImageBtn" class="add-image text-center border rounded p-3" style="width: 150px; height: 150px; cursor: pointer;">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
                                    <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z" />
                                </svg>
                                <p>Add Image</p>
                            </div>
                        </div>
                        <input id="fileInput" name="Images" asp-for-="Apartment.Images" type="file" accept="image/*" multiple style="display: none;" />
                    </div>
                </div>
            </div>

            <!-- Submit Button -->
            <div class="row mt-4">
                <div class="col d-flex justify-content-center">
                    <button type="button" class="btn btn-outline-secondary w-25 text-center me-5" onclick="GoBack()">Back</button>
                    <button type="submit" class="btn purple w-25">Update Apartment</button>

                </div>
            </div>
            <div class="row mt-4">
                
            </div>
        </form>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function GoBack(){
            window.history.back();
        }
        document.addEventListener('DOMContentLoaded', function () {
            const imageGrid = document.getElementById('imageGrid');
            const addImageBtn = document.getElementById('addImageBtn');
            const albumCount = document.getElementById('albumCount');
            const fileInput = document.getElementById('fileInput');
            const deletedImagesInput = document.getElementById('deletedImages'); // Track deleted images
            let imageCount = 0;
            const maxImages = 5;

            function updateAlbumCount() {
                albumCount.textContent = `Album ${imageCount} / ${maxImages} images`;
            }

            function renderExistingImages(images) {
                images.forEach((image, index) => {
                    if (imageCount < maxImages) {
                        const newImageCol = document.createElement('div');
                        newImageCol.classList.add('image-item');
                        newImageCol.innerHTML = `
                                <div class="image-container rounded" style="position: relative; width: 150px; height: 150px;">
                                    <img src="${image.url}" alt="Gallery image ${index + 1}" class="img-fluid rounded w-100 h-100" style="object-fit: cover;">
                                    <button type="button" class="delete-btn btn btn-danger text-white position-absolute top-0 end-0">X</button>
                                </div>
                            `;

                        // Add a hidden input for this existing image
                        const hiddenInput = document.createElement('input');
                        hiddenInput.type = 'hidden';
                        hiddenInput.name = 'ExistingImages'; // Name for tracking on the server
                        hiddenInput.value = image.id; // Use image ID or unique identifier

                        newImageCol.appendChild(hiddenInput);
                        imageGrid.insertBefore(newImageCol, addImageBtn);

                        imageCount++;
                        updateAlbumCount();

                        if (imageCount === maxImages) {
                            addImageBtn.style.display = 'none';
                        }

                        // Add delete functionality
                        const deleteBtn = newImageCol.querySelector('.delete-btn');
                        deleteBtn.addEventListener('click', function () {
                            // Add image ID to deletedImages
                            const deletedImageId = hiddenInput.value;
                            const deletedImages = deletedImagesInput.value.split(',').filter(x => x);
                            deletedImages.push(deletedImageId);
                            deletedImagesInput.value = deletedImages.join(',');

                            // Remove image from UI
                            imageGrid.removeChild(newImageCol);
                            imageCount--;
                            updateAlbumCount();
                            if (imageCount < maxImages) {
                                addImageBtn.style.display = 'flex';
                            }
                        });
                    }
                });
            }

            function addImage(file) {
                if (imageCount < maxImages) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        const newImageCol = document.createElement('div');
                        newImageCol.classList.add('image-item');
                        newImageCol.innerHTML = `
                                <div class="image-container rounded" style="position: relative; width: 150px; height: 150px;">
                                    <img src="${e.target.result}" alt="Gallery image ${imageCount + 1}" class="img-fluid rounded w-100 h-100" style="object-fit: cover;">
                                    <button type="button" class="delete-btn btn btn-danger text-white position-absolute top-0 end-0">X</button>
                                </div>
                            `;

                        // Create a hidden input for this specific file
                        const fileInput = document.createElement('input');
                        fileInput.type = 'file';
                        fileInput.name = 'Images'; // Matches the form's name for uploaded images
                        fileInput.style.display = 'none';
                        fileInput.classList.add('image-file-input');

                        // Create a new File object from the original file
                        const dataTransfer = new DataTransfer();
                        dataTransfer.items.add(file);
                        fileInput.files = dataTransfer.files;

                        newImageCol.appendChild(fileInput);
                        imageGrid.insertBefore(newImageCol, addImageBtn);

                        imageCount++;
                        updateAlbumCount();

                        if (imageCount === maxImages) {
                            addImageBtn.style.display = 'none';
                        }

                        // Add delete functionality
                        const deleteBtn = newImageCol.querySelector('.delete-btn');
                        deleteBtn.addEventListener('click', function () {
                            imageGrid.removeChild(newImageCol);
                            imageCount--;
                            updateAlbumCount();
                            if (imageCount < maxImages) {
                                addImageBtn.style.display = 'flex';
                            }
                        });
                    };
                    reader.readAsDataURL(file);
                }
            }

            fileInput.addEventListener('change', function (event) {
                const files = Array.from(event.target.files);
                files.forEach(file => addImage(file));
                fileInput.value = ''; // Allow re-selection of the same file
            });

            addImageBtn.addEventListener('click', function () {
                fileInput.click();
            });

            updateAlbumCount();

            // Preload existing images
            const existingImages = [
        @foreach (var image in Model.Images)
        {
            <text>{id: @image.Id, url: '@Url.Content(image.ImageUrl)' },</text>
        }
                ];
            renderExistingImages(existingImages);
        });
    </script>
</body>
</html>
